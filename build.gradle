plugins {
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.basic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    set('javaVersion', '11')
    set('encoding', 'utf-8')
    set('springfoxVersion', '2.9.2')
    set('swaggerVersion', '1.5.24')
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation("io.springfox:springfox-swagger2:${springfoxVersion}") {
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'io.swagger', module: 'swagger-models'
    }
    implementation "io.swagger:swagger-annotations:${swaggerVersion}"
    implementation "io.swagger:swagger-models:${swaggerVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

test {
    useJUnitPlatform()
}

clean {
    delete 'out'
}

compileJava {
    options.encoding = encoding
    options.deprecation = true
    options.compilerArgs << '-Xlint:all,-serial,-processing'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}